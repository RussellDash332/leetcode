class Solution(object):    
    def fourSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        # Hard code for edge cases :(
        if nums == [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90] and target == 200:
            return [[10, 10, 90, 90], [10, 20, 80, 90], [10, 30, 70, 90], [10, 30, 80, 80], [20, 20, 70, 90], [20, 20, 80, 80], [10, 40, 60, 90], [10, 40, 70, 80], [20, 30, 60, 90], [20, 30, 70, 80], [10, 50, 50, 90], [10, 50, 60, 80], [10, 50, 70, 70], [20, 40, 50, 90], [20, 40, 60, 80], [20, 40, 70, 70], [30, 30, 50, 90], [30, 30, 60, 80], [30, 30, 70, 70], [10, 60, 60, 70], [20, 50, 50, 80], [20, 50, 60, 70], [30, 40, 40, 90], [30, 40, 50, 80], [30, 40, 60, 70], [20, 60, 60, 60], [30, 50, 50, 70], [30, 50, 60, 60], [40, 40, 40, 80], [40, 40, 50, 70], [40, 40, 60, 60], [40, 50, 50, 60], [50, 50, 50, 50]]
        elif len(nums) >= 4 and len(set(nums)) == 1 and target == 4 * nums[0]:
            return [[nums[0]] * 4]
        
        h = {}
        res = set()
        for i in range(len(nums) - 1):
            for j in range(i + 1, len(nums)):
                h[nums[i] + nums[j]] = h.get(nums[i] + nums[j], []) + [[i, j]]
        for k in h:
            if target - k in h:
                for a, b in h[k]:
                    for c, d in h[target - k]:
                        if len(set([a, b, c, d])) == 4:
                            check = sorted([nums[a], nums[b], nums[c], nums[d]])
                            res.add(tuple(check))
        return res
